---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import type { StrapiPost } from '../interfaces/post';
import { ViewTransitions } from 'astro:transitions';
import { type Document, BLOCKS } from '@contentful/rich-text-types';
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
const { PUBLIC_STRAPI_ASSETS_URL, PUBLIC_DEFAULT_IMAGE } = import.meta.env;

type Props = StrapiPost;
const { attributes: {
		title, image, updatedAt, content, slug
} } = Astro.props;
const document: Document = {
	nodeType: BLOCKS.DOCUMENT,
	data: {},
	content: content.map((el: { type: any; children: any[]; }) => {
		return {
			nodeType: el.type,
			content: el.children.map((e: { type: any; text: any; }) => {
				return {
					nodeType: e.type,
					value: e.text,
					marks: []
				}
			})
		}
	})
}
const imageUrl: string = image?.data? 
	`${PUBLIC_STRAPI_ASSETS_URL}${image.data.attributes.url}` : PUBLIC_DEFAULT_IMAGE;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={documentToHtmlString(document)} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.description {
				border: 1px solid #fafafa;
    			padding: 25px;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
		<ViewTransitions />
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{imageUrl && <img width={480} height={360} src={imageUrl} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={updatedAt} />
							{
								updatedAt && (
									<div class="last-updated-on">
										Actualizado <FormattedDate date={updatedAt} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
					<div class="description" set:html={documentToHtmlString(document)}></div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
